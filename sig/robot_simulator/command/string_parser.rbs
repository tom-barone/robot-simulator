# frozen_string_literal: true

module RobotSimulator
	module Command
		type command_t = Command::Place | Command::Move | Command::Left | Command::Right | Command::Report | Command::Exit | Command::PutObstacle

		class StringParser
			def parse: (String input) -> command_t

			private

			def create_command: (String? command_name, String? args) -> command_t
			def create_simple_command: (String? command_name) -> command_t
			def parse_place_command: (String? args) -> Command::Place
			def parse_put_obstacle_command: (String? args) -> Command::PutObstacle
			def validate_place_format: (Array[String] parts) -> void
			def validate_put_obstacle_format: (Array[String] parts) -> void
			def extract_place_components: (Array[String] parts) -> [Integer, Integer, String]
			def extract_put_obstacle_components: (Array[String] parts) -> [Integer, Integer]
			def parse_direction: (String direction_str) -> Direction::direction_t
		end
	end
end
